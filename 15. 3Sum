class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& v) {
    vector<vector<int>> ret;
    sort(v.begin(), v.end());
    if(v.size()<3){
        return ret;
    }
    if(v.size()>2){
        if(v[0]==v[v.size()-1]){
            if(v[0]==0){
                 vector<int> an={v[0],v[0],v[0]}; 
                    ret.push_back(an);
            }
            return ret;
        }
    }
    unordered_set<string> sett;
    for(int i=0;i<v.size()-2;i++){
        int ptr1=i;
        int ptr2=v.size()-1;
        while(ptr2>ptr1+1){            
            int ans=v[ptr1]+v[ptr2];
                  if(binary_search(v.begin()+ptr1+1, v.begin()+ptr2, ans*-1)){
                    string temp=to_string(v[ptr1])+" "+to_string(v[ptr2])+" "+to_string(ans*-1);
                    if(sett.find(temp)==sett.end()){
                        vector<int> an={v[ptr1],ans*-1,v[ptr2]};
                        ret.push_back(an);
                        sett.insert(temp);
                    }
            }
            ptr2--;
        }
    }
    return ret;
    }
};
